process PAT = {


  ### General ###

  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"

  # return filter & timing reports
  untracked PSet options = { untracked bool wantSummary = true }


  ### Input ###

  untracked PSet maxEvents = { untracked int32 input = -1 }

    source = PoolSource { untracked vstring fileNames = { '/store/CSA07/skim/2008/2/20/CSA07-CSA07Muon-Chowder-A1-PDMuon-ReReco-startup-Skims0/0002/02ABAD5D-10E0-DC11-8F75-0030487C5C56.root' }
    }

  ### PAT steering ###

  include "PhysicsTools/PatAlgos/data/patLayer0.cff"
#  include "PhysicsTools/PatAlgos/test/patLayer0_ReplaceDefaults_full.cff"
  include "PhysicsTools/PatAlgos/data/patLayer1.cff"
 # include "PhysicsTools/PatAlgos/test/patLayer1_ReplaceDefaults_full.cff"

module zmumurecoil = ZmumuTauRecoil { 
   untracked InputTag tauSrc=coneIsolationTauJetTags
}
    service = TFileService {
	string fileName = "zmumurecoil.root"
 }

  path p = {
    patLayer0_TriggerMatch,                            
    patLayer1,
    zmumurecoil
  }


  ### Output ###
# NO OUTPUT EXCEPT NTUPLE MODULE

  # define the event content
#  block patEventContent = {
#    untracked vstring outputCommands = {
#      "drop *"
#    }
#  }
#  include "PhysicsTools/PatAlgos/data/patLayer1_EventContent.cff"
#  replace patEventContent.outputCommands += patLayer1EventContent.outputCommands

  # only accept events passing the complete path
#  block patEventSelection = {
#    untracked PSet SelectEvents = {
#      vstring SelectEvents = { "p" }
#    }
#  }

  # the actual output module
#  module out = PoolOutputModule {
#    untracked string fileName = "PATLayer1_Output.fromAOD_full.root"
#    using patEventSelection
#    using patEventContent
#    untracked bool verbose = false
#  }

#  endpath outpath = { out }


}
