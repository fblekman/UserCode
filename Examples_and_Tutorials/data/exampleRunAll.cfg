process exampleRunAll = {
###############################
#  Example configuration file, to be used with CMSSW_1_2_0
#  By Freya Blekman, f.blekman@imperial.ac.uk

###############################
# include services  and message logger

  include "Configuration/ReleaseValidation/data/Services.cfi"
  include "FWCore/MessageLogger/data/MessageLogger.cfi" 

# the message logger is quite verbose. The following two commands fix this
# obviously it might be necessary to comment these lines out when debugging
  replace MessageLogger.cout.threshold = "ERROR"
  replace MessageLogger.cerr.default.limit = 10

  service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 135799753
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 123456789
         untracked uint32 g4SimHits = 9876
      }
   }
###############################
#  input module: (Include your source module here if you want MC from an existing file)

###############################
#  This is where you would write your own MC generator module... 
#  see the PythiaHZZ4mu.cfi file for the standard PYTHIA settings
#  and then modify to your needs/analysis channel
 
  include "IOMC/GeneratorInterface/data/PythiaHZZ4mu.cfi"

#and fix the number of events to create (default is 10)
  replace PythiaSource.maxEvents = 5

###############################
# output module:

  module EXAMPLE-RUN-ALL = PoolOutputModule {
     untracked string fileName = "exampleRunAllOutput.root"
     untracked vstring outputCommands = 
     {
      "keep *",
      "drop *_g4SimHits_*_*"
     }
  }

###############################
# Smear the MC vertex. If none of these config files are selected 
# the default of (0,0,0) is used
 include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
# there are some other options, see the 
# Configuration/StandardSequences/data/Vtx*.cff files 
# for alternatives (which include a flat smear and a hypothetic beam profile smear)


###############################
# Run the standard reconstruction 
include "Configuration/StandardSequences/data/Reconstruction.cff"


###############################
# This file does all the simulation steps, e.g. the vertex smearing, Geant4 Hits, digitisation. 
# There are two appropriate paths, "psim" (the simulation step) and "pdigi" (the digitisation).
include "Configuration/StandardSequences/data/Simulation.cff"


###############################
# NOTE: You can only include ONE of the following three Mixing files. 
# The files control the settings on how to include pile-up events, the names are obvious.
include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
#include "Configuration/StandardSequences/data/MixingLowLumiPileUp.cff" 
#include "Configuration/StandardSequences/data/MixingHighLumiPileUp.cff" 


###############################
# Uncomment this file when you want the B-field to be zero.
#include "Configuration/StandardSequences/data/UseZeroBField.cff"

###############################
# define all paths
    path p1 = {psim} # simulation
    path p2 = {pdigi} # digitization
    path p3 = {reconstruction} # reconstruction
   endpath outpath = {EXAMPLE-RUN-ALL}

   schedule = {p1,p2,p3,outpath}

}

